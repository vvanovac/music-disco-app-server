import { PostgresConnectionOptions } from 'typeorm/driver/postgres/PostgresConnectionOptions';
import Users from '../authentication/users.entity';
import Tasks from '../tasks/tasks.entity';

const pgSchema = process.env.DB_SCHEMA || 'public';

export enum AUTH_GUARD_TYPES_ENUM {
  ADMIN,
  AUTHORIZED,
}

export enum PIANO_KEYS_ENUM {
  C2,
  D2,
  E2,
  F2,
  G2,
  A2,
  B2,
  C3,
  D3,
  E3,
  F3,
  G3,
  A3,
  B3,
  C4,
  D4,
  E4,
  F4,
  G4,
  A4,
  B4,
  C5,
  D5,
  E5,
  F5,
  G5,
  A5,
  B5,
  C6,
  D6,
  E6,
  F6,
  G6,
  A6,
  B6,
  C7,
  Csharp2,
  Dsharp2,
  Fsharp2,
  Gsharp2,
  Asharp2,
  Csharp3,
  Dsharp3,
  Fsharp3,
  Gsharp3,
  Asharp3,
  Csharp4,
  Dsharp4,
  Fsharp4,
  Gsharp4,
  Asharp4,
  Csharp5,
  Dsharp5,
  Fsharp5,
  Gsharp5,
  Asharp5,
  Csharp6,
  Dsharp6,
  Fsharp6,
  Gsharp6,
  Asharp6,
}

export const port = +process.env.PORT || 3000;
export const database: PostgresConnectionOptions = {
  type: 'postgres',
  host: process.env.DB_HOST || 'localhost',
  port: +process.env.DB_PORT || 5432,
  username: process.env.DB_USERNAME || 'postgres',
  password: process.env.DB_PASSWORD || 'postgres',
  database: process.env.DB_NAME || 'postgres',
  schema: pgSchema,
  entities: [Users, Tasks],
  synchronize: true,
};
export const jwt = {
  secret: process.env.JWT_SECRET || 'strongSecretKey',
  expiresIn: process.env.JWT_EXPIRES_IN || '60h',
};
